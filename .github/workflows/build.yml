name: Build

on:
  push:
    branches-ignore:
      - 'l10n_master'
      - 'gh-pages'

jobs:

  cloc:
    name: CLOC
    if: false
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f

      - name: Set up CLOC
        run: |
          sudo apt-get update
          sudo apt-get -y install cloc

      - name: Print lines of code
        run: cloc --vcs git --exclude-dir Resources,store,test,Properties --include-lang C#,XAML


  android:
    name: Android Build
    runs-on: windows-latest
    steps:
      - name: Set up MSBuild
        uses: microsoft/setup-msbuild@c26a08ba26249b81327e26f6ef381897b6a8754d

      - name: Print environment
        run: |
          nuget help | grep Version
          msbuild -version
          dotnet --info
          echo "GitHub ref: $GITHUB_REF"
          echo "GitHub event: $GITHUB_EVENT"

      - name: Checkout repo
        uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f

      - name: Decrypt secrets
        # if: github.ref == 'refs/heads/master'
        run: ./.github/scripts/android/decrypt-secrets.ps1
        shell: pwsh
        env:
          DECRYPT_FILE_PASSWORD: ${{ secrets.DECRYPT_FILE_PASSWORD }}

      - name: Increment version
        # if: github.ref == 'refs/heads/master'
        run: ./.github/scripts/android/increment-version.ps1
        shell: pwsh

      - name: Restore packages
        run: nuget restore

      - name: Run Core tests
        run: dotnet test test/Core.Test/Core.Test.csproj

      - name: Build Play Store publisher
        run: dotnet build ./store/google/Publisher/Publisher.csproj -p:Configuration=Release

      - name: Build for Play Store
        run: ./.github/scripts/android/build.ps1 -configuration Release
        shell: pwsh

      - name: Sign for Play Store
        # if: github.ref == 'refs/heads/master'
        run: ./.github/scripts/android/sign-play.ps1
        shell: pwsh
        env:
          PLAY_KEYSTORE_PASSWORD: ${{ secrets.PLAY_KEYSTORE_PASSWORD }}
          UPLOAD_KEYSTORE_PASSWORD: ${{ secrets.UPLOAD_KEYSTORE_PASSWORD }}

      - name: Upload Play Store .aab artifact
        # if: github.ref == 'refs/heads/master'
        uses: actions/upload-artifact@ee69f02b3dfdecd58bb31b4d133da38ba6fe3700
        with:
          name: com.x8bit.bitwarden.aab
          path: ./com.x8bit.bitwarden.aab

      - name: Upload Play Store .apk artifact
        # if: github.ref == 'refs/heads/master'
        uses: actions/upload-artifact@ee69f02b3dfdecd58bb31b4d133da38ba6fe3700
        with:
          name: com.x8bit.bitwarden.apk
          path: ./com.x8bit.bitwarden.apk

      - name: Clean for F-Droid
        run: ./.github/scripts/android/clean-fdroid.ps1
        shell: pwsh

      - name: Restore packages
        run: nuget restore

      - name: Build for F-Droid
        run: ./.github/scripts/android/build.ps1 -configuration FDroid
        shell: pwsh

      - name: Sign for F-Droid
        # if: github.ref == 'refs/heads/master'
        run: ./.github/scripts/android/sign-fdroid.ps1
        shell: pwsh
        env:
          FDROID_KEYSTORE_PASSWORD: ${{ secrets.FDROID_KEYSTORE_PASSWORD }}

      - name: Upload F-Droid .apk artifact
        # if: github.ref == 'refs/heads/master'
        uses: actions/upload-artifact@ee69f02b3dfdecd58bb31b4d133da38ba6fe3700
        with:
          name: com.x8bit.bitwarden-fdroid.apk
          path: ./com.x8bit.bitwarden-fdroid.apk  


  ios:
    name: iOS Build
    runs-on: macos-latest
    steps:
      - name: Print environment
        run: |
          nuget help | grep Version
          msbuild -version
          dotnet --info
          echo "GitHub ref: $GITHUB_REF"
          echo "GitHub event: $GITHUB_EVENT"

      - name: Checkout repo
        uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f

      - name: Decrypt secrets
        run: ./.github/scripts/ios/decrypt-secrets.ps1
        shell: pwsh
        env:
          DECRYPT_FILE_PASSWORD: ${{ secrets.DECRYPT_FILE_PASSWORD }}

      - name: Increment version
        # if: github.ref == 'refs/heads/master'
        run: ./.github/scripts/ios/increment-version.ps1
        shell: pwsh

      - name: Set up Keychain
        run: ./.github/scripts/ios/setup-keychain.ps1
        shell: pwsh
        env:
          KEYCHAIN_PASSWORD: ${{ secrets.IOS_KEYCHAIN_PASSWORD }}
          MOBILE_KEY_PASSWORD: ${{ secrets.IOS_KEY_PASSWORD }}
          DIST_CERT_PASSWORD: ${{ secrets.IOS_DIST_CERT_PASSWORD }}

      - name: Set up provisioning profiles
        run: ./.github/scripts/ios/setup-profiles.ps1
        shell: pwsh

      - name: Restore packages
        run: nuget restore

      - name: Archive Build for App Store
        # if: github.ref == 'refs/heads/master'
        run: ./.github/scripts/ios/build.ps1 -configuration AppStore -platform iPhone -archive
        shell: pwsh

      # - name: Build for App Store
      #   if: github.ref != 'refs/heads/master'
      #   run: ./.github/scripts/ios/build.ps1 -configuration AppStore -platform iPhone
      #   shell: pwsh

      - name: Export .ipa for App Store
        # if: github.ref == 'refs/heads/master'
        run: ./.github/scripts/ios/export-ipa.ps1 -method app-store
        shell: pwsh

      - name: Upload App Store .ipa artifact
        # if: github.ref == 'refs/heads/master'
        uses: actions/upload-artifact@ee69f02b3dfdecd58bb31b4d133da38ba6fe3700
        with:
          name: Bitwarden.ipa
          path: ./bitwarden-export/Bitwarden.ipa
