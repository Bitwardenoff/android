name: Build

on:
  workflow_dispatch:

jobs:
  download-artifacts:
    name: Download Artifacts
    runs-on: ubuntu-latest
    steps:
      - name: List files in directory
        run: |
          pwd
          ls -alh

      - name: Download artifact
        uses: dawidd6/action-download-artifact@b9571484721e8187f1fd08147b497129f8972c74
        with:
          # Optional, GitHub token, a Personal Access Token with `public_repo` scope if needed
          # Required, if artifact is from a different repo
          # github_token: ${{secrets.GITHUB_TOKEN}}
          # Required, workflow file name or ID
          workflow: build.yml
          # Optional, the status or conclusion of a completed workflow to search for
          # Can be one of a workflow conclusion::
          # "failure", "success", "neutral", "cancelled", "skipped", "timed_out", "action_required"
          # Or a workflow status:
          # "completed", "in_progress", "queued"
          # Default: "completed,success"
          workflow_conclusion: success
          # Optional, will get head commit SHA
          # pr: ${{github.event.pull_request.number}}
          # Optional, no need to specify if PR is
          # commit: ${{github.event.pull_request.head.sha}}
          # Optional, will use the branch
          branch: master
          # Optional, defaults to all types
          # event: push
          # Optional, will use specified workflow run
          # run_id: 1122334455
          # Optional, run number from the workflow
          # run_number: 34
          # Optional, uploaded artifact name,
          # will download all artifacts if not specified
          # and extract them in respective subdirectories
          # https://github.com/actions/download-artifact#download-all-artifacts
          # name: artifact_name
          # Optional, directory where to extract artifact. Defaults to the artifact name (see `name` input)
          # path: extract_here
          # Optional, defaults to current repo
          # repo: ${{github.repository}}

      - name: List files in directory
        run: |
          pwd
          ls -alh


  android:
    name: Android Build
    runs-on: windows-latest
    needs: download-artifacts
    steps:
      - name: List files in directory
        run: |
          pwd
          ls -alh

      - name: Deploy to Play Store
        if: github.event_name == 'release'
        run: ./.github/scripts/android/deploy-play.ps1
        shell: pwsh

      - name: Upload release assets
        if: github.event_name == 'release'
        run: |
          hub release edit `
            -a ./com.x8bit.bitwarden.aab `
            -a ./com.x8bit.bitwarden.apk `
            -a ./com.x8bit.bitwarden-fdroid.apk `
            -m "Version $($env:RELEASE_TAG_NAME.TrimStart('v'))" `
            $env:RELEASE_TAG_NAME
        shell: pwsh
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RELEASE_TAG_NAME: ${{ github.event.release.tag_name }}


  android-ubuntu:
    name: Android Ubuntu Build
    runs-on: ubuntu-latest
    needs: android
    steps:
      - name: List files in directory
        run: |
          pwd
          ls -alh

      - name: Deploy to gh-pages
        if: github.event_name == 'release'
        run: npm run deploy


  ios:
    name: iOS Build
    runs-on: macos-latest
    needs: download-artifacts
    steps:
      - name: List files in directory
        run: |
          pwd
          ls -alh

      - name: Deploy to App Store
        if: github.event_name == 'release'
        run: ./.github/scripts/ios/deploy-app-store.ps1
        shell: pwsh
        env:
          APPLE_ID_USERNAME: ${{ secrets.APPLE_ID_USERNAME }}
          APPLE_ID_PASSWORD: ${{ secrets.APPLE_ID_PASSWORD }}

      - name: Upload release assets
        if: github.event_name == 'release'
        run: |
          hub release edit `
            -a ./bitwarden-export/Bitwarden.ipa `
            -m "Version $($env:RELEASE_TAG_NAME.TrimStart('v'))" `
            $env:RELEASE_TAG_NAME
        shell: pwsh
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RELEASE_TAG_NAME: ${{ github.event.release.tag_name }}
