name: Release

on:
  workflow_dispatch:

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      mobile-version: ${{ steps.retrieve-mobile-version.outputs.mobile_version }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f # v2.3.4
        with:
          ref: master # TODO: Change to RC.

      - name: Retrieve Mobile release version
        id: retrieve-mobile-version
        run: |
          ver=$(sed -n -e '/android:versionName/ s/.*\= *//p' ./src/Android/Properties/AndroidManifest.xml | tr -d '"')
          echo "::set-output name=mobile_version::${ver}-b"
        shell: bash

      - name: Create Draft Release
        uses: actions/create-release@0cb9c9b65d5d1901c1f53e5e66eaf4afd303e70e # v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.retrieve-mobile-version.outputs.mobile_version }}
          release_name: Version ${{ steps.retrieve-mobile-version.outputs.mobile_version }}
          draft: true
          prerelease: false


  android:
    name: Android Build
    runs-on: windows-latest
    needs: create-release
    steps:
      - name: Checkout repo
        uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f # v2.3.4
        with:
          ref: master # TODO: Change to RC.

      - name: Download Play Store .aab artifact
        uses: dawidd6/action-download-artifact@b9571484721e8187f1fd08147b497129f8972c74 # v2.14.0
        with:
          workflow: build.yml
          workflow_conclusion: success
          branch: master # TODO: Change to RC.
          name: com.x8bit.bitwarden.aab

      - name: Download Play Store .apk artifact
        uses: dawidd6/action-download-artifact@b9571484721e8187f1fd08147b497129f8972c74 # v2.14.0
        with:
          workflow: build.yml
          workflow_conclusion: success
          branch: master # TODO: Change to RC.
          name: com.x8bit.bitwarden.apk

      - name: Download F-Droid .apk artifact
        uses: dawidd6/action-download-artifact@b9571484721e8187f1fd08147b497129f8972c74 # v2.14.0
        with:
          workflow: build.yml
          workflow_conclusion: success
          branch: master # TODO: Change to RC.
          name: com.x8bit.bitwarden-fdroid.apk

      - name: TEST - List last release
        run: |
          hub release --include-drafts -L 1 -f "%T"
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload release assets
        run: |
          hub release edit \
            -a ./com.x8bit.bitwarden.aab \
            -a ./com.x8bit.bitwarden.apk \
            -a ./com.x8bit.bitwarden-fdroid.apk \
            -m "Version $RELEASE_NAME" \
            $RELEASE_TAG_NAME
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RELEASE_NAME: ${{ needs.create-release.outputs.mobile-version }}
          RELEASE_TAG_NAME: v${{ needs.create-release.outputs.mobile-version }}

      - name: Deploy to Play Store
        if: false
        run: |
          PUBLISHER_PATH="./store/google/Publisher/bin/Release/netcoreapp2.0/Publisher.dll"
          CREDS_PATH="$HOME/secrets/play_creds.json"
          AAB_PATH="./com.x8bit.bitwarden.aab"
          TRACK="internal"

          dotnet $PUBLISHER_PATH $CREDS_PATH $AAB_PATH $TRACK
        shell: bash


  android-ubuntu:
    name: Android Ubuntu Build
    runs-on: ubuntu-latest
    needs: android
    steps:
      - name: Checkout repo
        uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f # v2.3.4
        with:
          ref: master # TODO: Change to RC.

      - name: Download F-Droid .apk artifact
        uses: dawidd6/action-download-artifact@b9571484721e8187f1fd08147b497129f8972c74 # v2.14.0
        with:
          workflow: build.yml
          workflow_conclusion: success
          branch: master # TODO: Change to RC.
          name: com.x8bit.bitwarden-fdroid.apk

      - name: Set up Node
        uses: actions/setup-node@46071b5c7a2e0c34e49c3cb8a0e792e86e18d5ea # v2.3.0
        with:
          node-version: '10.x'

      - name: Set up F-Droid server
        run: |
          sudo apt-get -qq update
          sudo apt-get -qqy install --no-install-recommends fdroidserver wget

      - name: Set up Git credentials
        env:
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
        run: |
          git config --global credential.helper store
          echo "https://${ACCESS_TOKEN}:x-oauth-basic@github.com" >> ~/.git-credentials
          git config --global user.email "ci@bitwarden.com"
          git config --global user.name "Bitwarden CI"

      - name: Print environment
        run: |
          node --version
          npm --version
          git --version
          echo "GitHub ref: $GITHUB_REF"
          echo "GitHub event: $GITHUB_EVENT"

      - name: Install Node dependencies
        run: npm install

      - name: Decrypt secrets
        run: |
          mkdir -p ~/secrets
          gpg --quiet --batch --yes --decrypt --passphrase="$DECRYPT_FILE_PASSWORD" --output ./store/fdroid/keystore.jks ./.github/secrets/store_fdroid-keystore.jks.gpg
        env:
          DECRYPT_FILE_PASSWORD: ${{ secrets.DECRYPT_FILE_PASSWORD }}

      - name: Compile for F-Droid Store
        if: false
        run: |
          cd $GITHUB_WORKSPACE
          mkdir dist
          cp CNAME ./dist
          cd store
          chmod 600 fdroid/config.py fdroid/keystore.jks
          mkdir -p temp/fdroid
          TEMP_DIR="$GITHUB_WORKSPACE/store/temp/fdroid"
          cd fdroid
          echo "keypass=\"$FDROID_STORE_KEYSTORE_PASSWORD\"" >>config.py
          echo "keystorepass=\"$FDROID_STORE_KEYSTORE_PASSWORD\"" >>config.py
          echo "local_copy_dir=\"$TEMP_DIR\"" >>config.py
          mkdir -p repo
          mv $GITHUB_WORKSPACE/com.x8bit.bitwarden-fdroid.apk ./repo/
          fdroid update
          fdroid server update
          cd ..
          rm -rf temp/fdroid/archive
          mv -v temp/fdroid ../dist
          cd fdroid
          cp index.html btn.png qr.png ../../dist/fdroid
          cd $GITHUB_WORKSPACE
        env:
          FDROID_STORE_KEYSTORE_PASSWORD: ${{ secrets.FDROID_STORE_KEYSTORE_PASSWORD }}

      - name: Deploy to gh-pages
        if: false
        run: npm run deploy


  ios:
    name: iOS Build
    runs-on: macos-latest
    needs: create-release
    steps:
      - name: Checkout repo
        uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f # v2.3.4
        with:
          ref: master # TODO: Change to RC.

      - name: Download App Store .ipa artifact
        uses: dawidd6/action-download-artifact@b9571484721e8187f1fd08147b497129f8972c74 # v2.14.0
        with:
          workflow: build.yml
          workflow_conclusion: success
          branch: master # TODO: Change to RC.
          name: Bitwarden.ipa

      - name: TEST - List last release
        run: |
          hub release --include-drafts -L 1 -f "%T"
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload release assets
        run: |
          echo "RELEASE_TAG_NAME=$RELEASE_TAG_NAME"
          hub release edit \
            -a ./Bitwarden.ipa \
            -m "Version $RELEASE_NAME" \
            $RELEASE_TAG_NAME
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RELEASE_NAME: ${{ needs.create-release.outputs.mobile-version }}
          RELEASE_TAG_NAME: v${{ needs.create-release.outputs.mobile-version }}

      - name: Deploy to App Store
        if: false
        run: |
          xcrun altool --upload-app --type ios --file "./Bitwarden.ipa" \
              --username "$APPLE_ID_USERNAME" --password "$APPLE_ID_PASSWORD"
        shell: bash
        env:
          APPLE_ID_USERNAME: ${{ secrets.APPLE_ID_USERNAME }}
          APPLE_ID_PASSWORD: ${{ secrets.APPLE_ID_PASSWORD }}
