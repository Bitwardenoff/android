name: Release

on:
  workflow_dispatch:

jobs:
  android:
    name: Android Build
    runs-on: windows-latest
    steps:
      - name: List files in directory
        run: |
          pwd
          ls -alh

      - name: Download Play Store .aab artifact
        uses: dawidd6/action-download-artifact@b9571484721e8187f1fd08147b497129f8972c74
        with:
          workflow: build.yml
          workflow_conclusion: success
          branch: master
          name: com.x8bit.bitwarden.aab

      - name: Download Play Store .apk artifact
        uses: dawidd6/action-download-artifact@b9571484721e8187f1fd08147b497129f8972c74
        with:
          workflow: build.yml
          workflow_conclusion: success
          branch: master
          name: com.x8bit.bitwarden.apk

      - name: Download F-Droid .apk artifact
        uses: dawidd6/action-download-artifact@b9571484721e8187f1fd08147b497129f8972c74
        with:
          workflow: build.yml
          workflow_conclusion: success
          branch: master
          name: com.x8bit.bitwarden-fdroid.apk

      - name: Deploy to Play Store
        run: ./.github/scripts/android/deploy-play.ps1
        shell: pwsh

      - name: Upload release assets
        run: |
          hub release edit `
            -a ./com.x8bit.bitwarden.aab `
            -a ./com.x8bit.bitwarden.apk `
            -a ./com.x8bit.bitwarden-fdroid.apk `
            -m "Version $($env:RELEASE_TAG_NAME.TrimStart('v'))" `
            $env:RELEASE_TAG_NAME
        shell: pwsh
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RELEASE_TAG_NAME: ${{ github.event.release.tag_name }}


  android-ubuntu:
    name: Android Ubuntu Build
    runs-on: ubuntu-latest
    needs: android
    steps:
      - name: List files in directory
        run: |
          pwd
          ls -alh

      - name: Download F-Droid .apk artifact
        uses: dawidd6/action-download-artifact@b9571484721e8187f1fd08147b497129f8972c74
        with:
          workflow: build.yml
          workflow_conclusion: success
          branch: master
          name: com.x8bit.bitwarden-fdroid.apk

      - name: Set up Node
        uses: actions/setup-node@46071b5c7a2e0c34e49c3cb8a0e792e86e18d5ea
        with:
          node-version: '10.x'

      - name: Set up F-Droid server
        run: |
          sudo apt-get -qq update
          sudo apt-get -qqy install --no-install-recommends fdroidserver wget

      # - name: Set up Git credentials
      #   env:
      #     ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      #   run: |
      #     git config --global credential.helper store
      #     echo "https://${ACCESS_TOKEN}:x-oauth-basic@github.com" >> ~/.git-credentials
      #     git config --global user.email "ci@bitwarden.com"
      #     git config --global user.name "Bitwarden CI"

      - name: Print environment
        run: |
          node --version
          npm --version
          git --version
          Write-Output "GitHub ref: $env:GITHUB_REF"
          Write-Output "GitHub event: $env:GITHUB_EVENT"
        shell: pwsh

      - name: Checkout repo
        uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f

      - name: Install Node dependencies
        run: npm install

      - name: Decrypt secrets
        run: |
          ./.github/scripts/decrypt-secret.ps1 -filename store_fdroid-keystore.jks.gpg `
            -output ./store/fdroid/keystore.jks
        shell: pwsh
        env:
          DECRYPT_FILE_PASSWORD: ${{ secrets.DECRYPT_FILE_PASSWORD }}

      # - name: Compile for F-Droid Store
      #   run: |
      #       sudo chmod +x ./.github/scripts/android/compile-fdroid.sh
      #       ./.github/scripts/android/compile-fdroid.sh
      #   env:
      #     FDROID_STORE_KEYSTORE_PASSWORD: ${{ secrets.FDROID_STORE_KEYSTORE_PASSWORD }}
      #     RELEASE_TAG_NAME: ${{ github.event.release.tag_name }}

      # - name: Deploy to gh-pages
      #   run: npm run deploy


  ios:
    name: iOS Build
    runs-on: macos-latest
    steps:
      - name: List files in directory
        run: |
          pwd
          ls -alh

      - name: Download App Store .ipa artifact
        uses: dawidd6/action-download-artifact@b9571484721e8187f1fd08147b497129f8972c74
        with:
          workflow: build.yml
          workflow_conclusion: success
          branch: master
          name: Bitwarden.ipa

      - name: Deploy to App Store
        if: github.event_name == 'release'
        run: ./.github/scripts/ios/deploy-app-store.ps1
        shell: pwsh
        env:
          APPLE_ID_USERNAME: ${{ secrets.APPLE_ID_USERNAME }}
          APPLE_ID_PASSWORD: ${{ secrets.APPLE_ID_PASSWORD }}

      - name: Upload release assets
        if: github.event_name == 'release'
        run: |
          hub release edit `
            -a ./bitwarden-export/Bitwarden.ipa `
            -m "Version $($env:RELEASE_TAG_NAME.TrimStart('v'))" `
            $env:RELEASE_TAG_NAME
        shell: pwsh
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RELEASE_TAG_NAME: ${{ github.event.release.tag_name }}
